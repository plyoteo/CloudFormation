Mappings:
  RegionAmi:
    eu-central-1:
      ami: ami-0eb7496c2e0403237
  RegionKeyPair:
    eu-central-1:
      kp : frank-kp
Parameters:
  DesiredCapacity:
    Type: Number
    Default: 1
  MinSize:
    Type: Number
    Default: 1
  MaxSize:
    Type: Number
    Default: 2
  MyVPC:
    Type: String
    Default: vpc-06c83e4aa05ca1103
  MyPublicSubnet1:
    Type: String
    Default: subnet-084554475cdb7523a
  MyPublicSubnet2:
    Type: String
    Default: subnet-09581f473acd4580f
  MyPrivateSubnet1:
    Type: String
    Default: subnet-0d07df2790838ac6d
  MyPrivateSubnet2:
    Type: String
    Default: subnet-0a458335a8d9ac2a55
  MyPublicSG:
    Type: String
    Default: sg-0f33614cfb4985e85
  MyPrivateSG:
    Type: String
    Default: sg-0a9ab6f051b79a11a
Resources:
  MyTG1:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref MyVPC 
      Name: TG1
      Protocol: HTTP
      Port: 80
      HealthCheckEnabled: True
      HealthCheckProtocol: HTTP
      HealthCheckPath: /
      HealthCheckPort: traffic-port
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      HealthCheckTimeoutSeconds: 5
      HealthCheckIntervalSeconds: 30
  MyTG2:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref MyVPC 
      Name: TG2
      Protocol: HTTP
      Port: 80
      HealthCheckEnabled: True
      HealthCheckProtocol: HTTP
      HealthCheckPath: /
      HealthCheckPort: traffic-port
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      HealthCheckTimeoutSeconds: 5
      HealthCheckIntervalSeconds: 30
  MyALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: MyALB
      Scheme: internet-facing
      Type: application 
      IpAddressType: ipv4
      Subnets:
        - !Ref MyPublicSubnet1
        - !Ref MyPublicSubnet2
      SecurityGroups:
        - !Ref MyPublicSG
  MyListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref MyALB
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref MyTG1
          Order: 1
  MyListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Priority: 1
      ListenerArn: !Ref MyListener
      Conditions:
        - Field: host-header
          Values:
            - alt.plyoteo.net
      Actions:
        - Type: forward
          TargetGroupArn: !Ref MyTG2
          Order: 1
  MyEC2Profile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - S3FullAccess
  MyLT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: MyLT
      LaunchTemplateData:
        ImageId: !FindInMap
          - RegionAmi
          - !Ref AWS::Region
          - ami
        InstanceType: t2.micro
        SecurityGroupIds:
          - !Ref MyPrivateSG
        KeyName: !FindInMap
          - RegionKeyPair
          - !Ref AWS::Region
          - kp
        IamInstanceProfile:
          Arn: !GetAtt
            - MyEC2Profile
            - Arn
        UserData: !Base64 |
          #!/bin/bash
          yum update -y
          yum install httpd -y
          systemctl start httpd
          systemctl enable httpd
          cd /var/www/html
          aws s3 cp s3://dctpocos/names.csv ./
          aws s3 cp s3://dctpocos/index.txt ./
          EC2NAME=`cat ./names.csv|sort -R|head -n 1|xargs`
          sed "s/INSTANCE/$EC2NAME/" index.txt > index.html
  MyASG1:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: MyASG1
      MinSize: 1
      MaxSize: 1
      DesiredCapacity: 1
      HealthCheckGracePeriod: 300
      LaunchTemplate:
        LaunchTemplateId: !Ref MyLT
        Version: !GetAtt MyLT.LatestVersionNumber
      VPCZoneIdentifier:
        - !Ref MyPrivateSubnet1
        - !Ref MyPrivateSubnet2
      TargetGroupARNs: 
        - !Ref MyTG1
  MyASG2:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: MyASG2
      MinSize: 1
      MaxSize: 1
      DesiredCapacity: 1
      HealthCheckGracePeriod: 300
      LaunchTemplate:
        LaunchTemplateId: !Ref MyLT
        Version: !GetAtt MyLT.LatestVersionNumber
      VPCZoneIdentifier:
        - !Ref MyPrivateSubnet1
        - !Ref MyPrivateSubnet2
      TargetGroupARNs: 
        - !Ref MyTG2
  MyAliasRecord1:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget: 
        DNSName: !GetAtt MyALB.DNSName
        HostedZoneId: !GetAtt MyALB.CanonicalHostedZoneID
      HostedZoneName: plyoteo.net.
      Name: plyoteo.net
      Type: A
  MyAliasRecord2:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget: 
        DNSName: !GetAtt MyALB.DNSName
        HostedZoneId: !GetAtt MyALB.CanonicalHostedZoneID
      HostedZoneName: plyoteo.net.
      Name: alt.plyoteo.net
      Type: A
