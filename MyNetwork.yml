Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: True
  MyPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 0
        - !GetAZs
            Ref: AWS::Region
  MyPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 1
        - !GetAZs
            Ref: AWS::Region
  MyPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select
        - 0
        - !GetAZs
            Ref: AWS::Region
  MyPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.4.0/24
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select
        - 1
        - !GetAZs
            Ref: AWS::Region
  MyPublicRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
  MyIgw:
    Type: AWS::EC2::InternetGateway
  MyIgwAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref MyIgw
      VpcId: !Ref MyVPC
  MyInternetRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref MyPublicRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyIgw
  MyPublicSubnet1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MyPublicSubnet1
      RouteTableId: !Ref MyPublicRT
  MyPublicSubnet2Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MyPublicSubnet2
      RouteTableId: !Ref MyPublicRT
  MyEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  MyNAT:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId: !Ref MyPublicSubnet1
      AllocationId: !GetAtt MyEIP.AllocationId
  MyPrivateRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
  MyNATRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref MyPrivateRT
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref MyNAT
  MyPrivateSubnet1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MyPrivateSubnet1
      RouteTableId: !Ref MyPrivateRT
  MyPrivateSubnet2Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MyPrivateSubnet2
      RouteTableId: !Ref MyPrivateRT
  MyPublicSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: MyPublicSG
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
  MyPrivateSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: MyPrivateSG
      VpcId: !Ref MyVPC
  MyPublicOutbound:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      DestinationSecurityGroupId: !GetAtt
        - MyPrivateSG
        - GroupId
      GroupId: !GetAtt
        - MyPublicSG
        - GroupId
  MyPrivateInbound:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      SourceSecurityGroupId: !Ref MyPublicSG
      GroupId: !Ref MyPrivateSG

